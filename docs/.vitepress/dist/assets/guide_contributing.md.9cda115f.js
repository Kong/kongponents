import{_ as s,c as n,o as a,S as e}from"./chunks/framework.4dbed076.js";const C=JSON.parse('{"title":"Contributing","description":"","frontmatter":{},"headers":[],"relativePath":"guide/contributing.md","filePath":"guide/contributing.md","lastUpdated":1688489121000}'),l={name:"guide/contributing.md"},o=e(`<h1 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h1><p>In this section we will focus on the steps and nuances of developing Kongponents. Lets start with installation.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Clone the Kongponents repository</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/Kong/kongponents.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Install dependencies</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kongponents</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--frozen-lockfile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Next, let&#39;s generate <a href="#cli">the CLI</a> that can be used to easy scaffold new Kongponent components. <em>This likely was ran automatically after installing dependencies.</em></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build:cli</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Run the docs local dev server with hot-module reload</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs:dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Build the docs and preview the built files locally</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs:preview</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Perform a full build of all Kongponents and the Docs site</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Perform a full build of all Kongponents and output a <code>/bundle-analyzer/stats-treemap.html</code> to view the output.</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build:visualize</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="cli" tabindex="-1">CLI <a class="header-anchor" href="#cli" aria-label="Permalink to &quot;CLI&quot;">​</a></h2><p>It is <strong>highly recommended</strong> to utilize the included CLI when creating new Kongponents as it will scaffold all the necessary files.</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create-kongponent</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="create-a-new-kongponent" tabindex="-1">Create a new Kongponent <a class="header-anchor" href="#create-a-new-kongponent" aria-label="Permalink to &quot;Create a new Kongponent&quot;">​</a></h2><p>When creating a new component with the CLI it will perform the following actions:</p><ul><li>Creates <code>/src/components/{KongponentName}/</code> directory with the following files: <ul><li><code>{KongponentName}.cy.ts</code> - Cypress Component Test file</li><li><code>{KongponentName}.vue</code> - Component file</li></ul></li><li>Adds <code>/src/components/{KongponentName}/{KongponentName}.vue</code> to the exports in <code>/src/components/index.ts</code></li><li>Creates a VitePress markdown file at <code>/docs/components/{kongponent}.md</code> (you have to manually add this file to the VitePress sidebar in <code>docs/.vitepress/config.ts</code>).</li></ul><div class="warning custom-block"><p class="custom-block-title">NOTE</p><p>If your component is exported via an <code>index.ts</code> file, or anything other than the default <code>{KongponentName}.vue</code> file, you will need to modify <code>/src/components/index.ts</code> accordingly.</p></div><p>Once ran, this will be the resulting file structure:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs/</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">components/</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{kongponent}.md</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">components/</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{KongponentName}/</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{KongponentName}.cy.ts</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{KongponentName}.vue</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="important-type-exports" tabindex="-1">Important: Type Exports <a class="header-anchor" href="#important-type-exports" aria-label="Permalink to &quot;Important: Type Exports&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>As long as you create the new Kongponent via <code>yarn create-package</code> this step is automated.</p></div><p>You <strong>must</strong> manually add the new component type to the module export located at <code>src/global-components.ts</code>. Just add your new component to the bottom of the list.</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">// src/global-components.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> components </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./components</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">module</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@vue/runtime-core</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">GlobalComponents</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    KAlert</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">components</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">KAlert</span></span>
<span class="line"><span style="color:#F07178;">    KBadge</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">components</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">KBadge</span></span>
<span class="line"><span style="color:#F07178;">    KBreadcrumbs</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">components</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">KBreadcrumbs</span></span>
<span class="line"><span style="color:#F07178;">    KButton</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">components</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">KButton</span></span>
<span class="line highlighted"><span style="color:#F07178;">    YourNewComponent</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">components</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">YourNewComponent</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="add-the-doc-file-to-the-sidebar" tabindex="-1">Add the doc file to the sidebar <a class="header-anchor" href="#add-the-doc-file-to-the-sidebar" aria-label="Permalink to &quot;Add the doc file to the sidebar&quot;">​</a></h3><p>Although the CLI will create a file in the docs directory, the new doc file <strong>is not automatically added to the docs sidebar config</strong>.</p><p>Add the component to the desired location in the sidebar</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">// docs/.vitepress/config.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sidebar</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Components sidebar</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/components/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: [</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      text</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Components</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      collapsible</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      items</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">...</span></span>
<span class="line highlighted"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// The name of the rendered element, e.g. &quot;Alert&quot;</span></span>
<span class="line highlighted"><span style="color:#F07178;">          text</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{Component Name}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// The name of the \`.md\` markdown file without the extension, e.g. &quot;/components/alert.md&quot;</span></span>
<span class="line highlighted"><span style="color:#F07178;">          link</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/components/{component-name}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#F07178;">      ]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="edit-the-doc-file" tabindex="-1">Edit the Doc file <a class="header-anchor" href="#edit-the-doc-file" aria-label="Permalink to &quot;Edit the Doc file&quot;">​</a></h2><p>Each component has an associated file in the <code>/docs/components</code> directory. After scaffolding the new component file, a doc file should be present named the same as your new component. Below are the steps to add the file to the docs site and how to get started editing.</p><h3 id="renaming-the-file-if-needed" tabindex="-1">Renaming the file (if needed) <a class="header-anchor" href="#renaming-the-file-if-needed" aria-label="Permalink to &quot;Renaming the file (if needed)&quot;">​</a></h3><p>The docs markdown file should be named correctly if generated from the <a href="#cli"><code>create-kongponent</code> CLI</a>. If necessary, rename the file to correspond to what type of component it is. For documentation purposes page names should be based on what the component is vs its Kongponent <code>K</code> name.</p><h4 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><ul><li><code>kbutton.md</code> → <code>button.md</code></li><li><code>kcard.md</code> → <code>card.md</code></li><li><code>kdatetimepicker</code> → <code>datetime-picker.md</code></li></ul><h3 id="update-the-page-title" tabindex="-1">Update the page title <a class="header-anchor" href="#update-the-page-title" aria-label="Permalink to &quot;Update the page title&quot;">​</a></h3><p>Update the first line of the doc to match the file name. This is what is displayed as the page title &amp; in the sidebar.</p><div class="language-md line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">{Name}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-weight:bold;">**</span><span style="color:#F07178;font-weight:bold;">{KongponentName}</span><span style="color:#89DDFF;font-weight:bold;">**</span><span style="color:#A6ACCD;"> - description</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="importing-type-declarations-and-interfaces" tabindex="-1">Importing type declarations and interfaces <a class="header-anchor" href="#importing-type-declarations-and-interfaces" aria-label="Permalink to &quot;Importing type declarations and interfaces&quot;">​</a></h3><p>When importing type declarations or interfaces, you can use a relative path instead of the <code>@/</code> alias so that the types are properly resolved within consuming packages. See the example below:</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">StepperState</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./KStepState.vue</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This repository utilizes <a href="https://www.npmjs.com/package/tsc-alias" target="_blank" rel="noreferrer"><code>tsc-alias</code></a> to replace these paths during the build; however, either method is acceptable.</p><h3 id="style-guidelines" tabindex="-1">Style guidelines <a class="header-anchor" href="#style-guidelines" aria-label="Permalink to &quot;Style guidelines&quot;">​</a></h3><p>In order to prevent component styles from leaking out into the consuming application, <strong>all</strong> component styles <strong>MUST</strong> adhere to one of the following rules:</p><ol><li><p>(Preferred) All styles must be <code>scoped</code> within your components with <code>&lt;style lang=&quot;scss&quot; scoped&gt;</code>.</p><ol><li>If you need to target nested components (e.g. Kongponents) to override styles, you&#39;ll need to utilize <a href="https://vuejs.org/api/sfc-css-features.html#deep-selectors" target="_blank" rel="noreferrer">deep selectors</a></li></ol><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scss</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">your-component-class</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">deep(.k-button) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/* KButton override styles go here */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>All component styles must be wrapped in a unique wrapper class so that styles do not leak out into the consuming application.</p><p>The class name should follow the syntax <code>.k-{component-name}-*</code></p><p>This is a good practice even if you go with option one outlined above.</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scss</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">k-button</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* All other styles must go inside the wrapper */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ol><h4 id="relative-units" tabindex="-1">Relative units <a class="header-anchor" href="#relative-units" aria-label="Permalink to &quot;Relative units&quot;">​</a></h4><p>Kongponent styles should <strong>never</strong> use relative font units; specifically, do not use <code>rem</code> or <code>em</code> units.</p><p>We cannot control the <code>html</code> base font size and therefore these relative units are not predictable within a host application. Use <code>px</code> (pixels) or a similar unit instead.</p><h2 id="testing-your-component" tabindex="-1">Testing your component <a class="header-anchor" href="#testing-your-component" aria-label="Permalink to &quot;Testing your component&quot;">​</a></h2><p>You&#39;re free to play around with your component on the local instance of the docs site by running <code>yarn docs:dev</code>; however, you may also want to test your local changes in a consuming application.</p><ol><li><p>Run <code>yarn link</code> from the root of the Kongponents repository</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">v1.22.17</span></span>
<span class="line"><span style="color:#FFCB6B;">success</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Registered</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@kong/kongponents</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">info</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">You</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">can</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">now</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">yarn</span><span style="color:#C3E88D;"> link </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@kong/kongponents</span><span style="color:#89DDFF;">&quot;\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> the projects where you want to use this package and it will be used instead.</span></span>
<span class="line"><span style="color:#FFCB6B;">✨</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">Done</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.04</span><span style="color:#C3E88D;">s.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>Build the Kongponents package</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build:kongponents</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>Alternatively, if you do not need to rebuild the types and would prefer to watch for changes, you can run just the <code>vite build</code> command with the <code>--watch</code> flag to automatically rebuild when you save changes.</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--watch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></li><li><p>As the instructions above outline, next, inside your consuming application, run <code>yarn link &quot;@kong/kongponents&quot;</code></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@kong/kongponents</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">v1.22.19</span></span>
<span class="line"><span style="color:#FFCB6B;">success</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Using</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">linked</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@kong/kongponents</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">✨</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">Done</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.04</span><span style="color:#C3E88D;">s.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Now that the dependency is linked, your local project will utilize the local build.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>You may need to clear the <code>vite</code> cache using the <code>--force</code> flag in your host app in order to pick up the newly built files. You will also need to restart your Vite server after every rebuild of Kongponents to pull in the changes.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If your project utilizes Vite, you may need to dedupe your dependency tree to avoid errors when running locally. Inside your <code>vite.config.ts</code> file, insert the following configuration:</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">resolve</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Use this option to force Vite to always resolve listed dependencies to the same copy (from project root)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Allows utilizing \`yarn link &quot;{package-name}&quot;\` without throwing errors</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">dedupe</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div></li><li><p>When you&#39;re finished testing, don&#39;t forget to run <code>yarn unlink</code> inside the Kongponents directory.</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">unlink</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">unlink</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">v1.22.17</span></span>
<span class="line"><span style="color:#FFCB6B;">success</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Unregistered</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@kong/kongponents</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">info</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">You</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">can</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">now</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">yarn</span><span style="color:#C3E88D;"> unlink </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@kong/kongponents</span><span style="color:#89DDFF;">&quot;\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> the projects where you no longer want to use this package.</span></span>
<span class="line"><span style="color:#FFCB6B;">✨</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">Done</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.04</span><span style="color:#C3E88D;">s.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>At this point it is recommended you delete the <code>node_modules</code> folder in your consuming app and rerun <code>yarn install --frozen-lockfile</code> to fully clear the linkage.</p></li></ol><h2 id="sandbox" tabindex="-1">Sandbox <a class="header-anchor" href="#sandbox" aria-label="Permalink to &quot;Sandbox&quot;">​</a></h2><p>The sandbox mode in Kongponents provides developers with a controlled environment to test and ensure that no styles from the docs app leak through into the component library. This feature guarantees that the components look and function as intended, without any external interference.</p><p>By using the sandbox mode, you can have confidence that components maintain their visual consistency, regardless of the context in which they are used.</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev:sandbox</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="committing-changes" tabindex="-1">Committing Changes <a class="header-anchor" href="#committing-changes" aria-label="Permalink to &quot;Committing Changes&quot;">​</a></h2><p>This repo uses <a href="https://www.conventionalcommits.org/en/v1.0.0/" target="_blank" rel="noreferrer">Conventional Commits</a>.</p><p><a href="https://github.com/commitizen/cz-cli" target="_blank" rel="noreferrer">Commitizen</a> and <a href="https://github.com/conventional-changelog/commitlint" target="_blank" rel="noreferrer">Commitlint</a> are used to help build and enforce commit messages.</p><p>It is <strong>highly recommended</strong> to use the following command in order to create your commits:</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This will trigger the Commitizen interactive prompt for building your commit message and will allow you to preview your commit.</p><h3 id="enforcing-commit-format" tabindex="-1">Enforcing Commit Format <a class="header-anchor" href="#enforcing-commit-format" aria-label="Permalink to &quot;Enforcing Commit Format&quot;">​</a></h3><p><a href="https://github.com/evilmartians/lefthook" target="_blank" rel="noreferrer">Lefthook</a> is used to manage Git Hooks within the repo. See see the current <code>/lefthook.yml</code> here:</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Reference:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># https://github.com/evilmartians/lefthook/blob/master/docs/full_guide.md</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">pre-push</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">parallel</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">commands</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">stylelint</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">skip</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yarn stylelint</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">eslint</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">skip</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yarn lint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">commit-msg</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">parallel</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">commands</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">commitlint</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">skip</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yarn commitlint --edit &quot;$1&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>A <code>commit-msg</code> hook is automatically setup that enforces commit message stands with <code>commitlint</code>.</p><p>A <code>pre-push</code> hook is configured to run Stylelint and ESLint before pushing your changes to the remote repository.</p><h2 id="recommended-ide-setup" tabindex="-1">Recommended IDE Setup <a class="header-anchor" href="#recommended-ide-setup" aria-label="Permalink to &quot;Recommended IDE Setup&quot;">​</a></h2><p>We recommend using <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">VSCode</a> along with a few <a href="https://github.com/Kong/kongponents/blob/main/.vscode/settings.json" target="_blank" rel="noreferrer">suggested extensions</a> (VSCode should automatically show a notification suggesting to install the recommended extensions when you open the project folder for the first time).</p><div class="warning custom-block"><p class="custom-block-title">NOTE</p><p>To utilize all the pre-configured VSCode workspace settings for this project, we recommend opening the containing workspace folder directly, instead of opening it through VSCode Workspace.</p></div><h2 id="type-interfaces-for-vue-components" tabindex="-1">Type interfaces for Vue components <a class="header-anchor" href="#type-interfaces-for-vue-components" aria-label="Permalink to &quot;Type interfaces for Vue components&quot;">​</a></h2><p>All types related to components must be included in the <code>/src/types/</code> folder in a corresponding <code>{Kongponent-name}.ts</code> type file (without the <code>k</code> prefix).</p><p>All files must be exported from the <code>/src/types/index.ts</code> file.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">types/</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{Kongponent-name}.ts</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>When importing a type for use in a component, we use import with <code>type</code> prefix</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SomeType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/types</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="tips-when-typing-vue-components" tabindex="-1">Tips when typing Vue components <a class="header-anchor" href="#tips-when-typing-vue-components" aria-label="Permalink to &quot;Tips when typing Vue components&quot;">​</a></h3><ul><li>Instead of setting prop type as <code>String</code>, set it as String Literal Types e.g. when we want to set via prop a <code>mode</code>, we can set it as <code>light | dark | none</code> instead of <code>String</code></li><li>Avoid using <code>Object</code> type as props, use an interface instead.</li></ul>`,82),p=[o];function t(r,c,i,d,y,u){return a(),n("div",null,p)}const h=s(l,[["render",t]]);export{C as __pageData,h as default};
