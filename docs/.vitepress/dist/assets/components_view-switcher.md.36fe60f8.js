import{d as y,_ as m,E as r,c,J as o,w as l,k as e,a,S as g,o as p,t as i,e as w,F as _,G as b,b as v}from"./chunks/framework.4dbed076.js";const C=y({methods:{getTurtlePic(t){return`https://nick-intl.mtvnimages.com/uri/mgid:file:gsp:kids-assets:/nick/polls/images/tmnt-poll-crown-the-pizza-king-${t.toLowerCase()}.jpg?quality=0.75&height=150&width=150&crop=true`}}}),H=JSON.parse('{"title":"View Switcher","description":"","frontmatter":{"turtleOptions":{"headers":[{"key":"profile","hideLabel":true},{"label":"Name","key":"name"},{"label":"Age","key":"age"},{"label":"Color","key":"color"}]}},"headers":[],"relativePath":"components/view-switcher.md","filePath":"components/view-switcher.md","lastUpdated":1690815113000}');const V=e("h1",{id:"view-switcher",tabindex:"-1"},[a("View Switcher "),e("a",{class:"header-anchor",href:"#view-switcher","aria-label":'Permalink to "View Switcher"'},"​")],-1),f=e("p",null,[e("strong",null,"KViewSwitcher"),a(" Is used to toggle list views to grid views.")],-1),k=e("h2",{id:"props",tabindex:"-1"},[a("Props "),e("a",{class:"header-anchor",href:"#props","aria-label":'Permalink to "Props"'},"​")],-1),A=e("h3",{id:"view",tabindex:"-1"},[a("view "),e("a",{class:"header-anchor",href:"#view","aria-label":'Permalink to "view"'},"​")],-1),K=e("p",null,[a("The current view of your UI, one of "),e("code",null,"table"),a(" or "),e("code",null,"grid"),a(". The button will show icons for the opposite. For example, if your data is currently in a list/table, passing "),e("code",null,"list"),a(" will render the grid icon.")],-1),S=g(`<blockquote><p>The <code>KComponent</code> component is used in this example to create state.</p></blockquote><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">KComponent</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:data</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ currentView: &#39;grid&#39; }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-slot</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ data }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">KCard</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-slot:body</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ data }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">KCard</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">KViewSwitcher</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#C792EA;">:view</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data.currentView</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#C792EA;">@view-changed</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(view) =&gt; data.currentView = view</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">KComponent</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p><code>KViewSwitcher</code> will emit the new view on click. This then allows you to change the UI to the new view. The button will also toggle to the opposite view for users to switch back.</p>`,4),q={class:"sewage"},T=e("h3",null,"Teenage Mutant Ninja Turtles",-1),B={key:0},E=["src"],P={key:1,class:"card-view"},x={class:"card-element"},N={class:"card-element"},$=["src"],U={class:"card-element"},L=e("strong",null,"Age: ",-1);function I(t,O,j,z,J,M){const d=r("KViewSwitcher"),u=r("KComponent"),h=r("KCard"),D=r("KTable"),F=r("KBadge");return p(),c("div",null,[V,f,o(u,{data:{currentView:"table"}},{default:l(({data:n})=>[o(d,{view:n.currentView,onViewChanged:s=>n.currentView=s},null,8,["view","onViewChanged"])]),_:1}),k,A,K,o(u,{data:{currentView:"grid"}},{default:l(({data:n})=>[e("div",null,[o(h,{class:"vertical-spacing"},{body:l(()=>[a(i(n),1)]),_:2},1024),o(d,{view:n.currentView,onViewChanged:s=>n.currentView=s},null,8,["view","onViewChanged"])])]),_:1}),S,o(u,{data:{currentView:"table",turtles:[{name:"Leonardo",age:34,color:"blue"},{name:"Michelangelo",age:32,color:"orange"},{name:"Raphael",age:32,color:"red"},{name:"Donatello",age:29,color:"purple"}]}},{default:l(({data:n})=>[e("div",null,[e("div",q,[T,o(d,{view:n.currentView,onViewChanged:s=>n.currentView=s},null,8,["view","onViewChanged"])]),n.currentView==="table"?(p(),c("div",B,[o(D,{hasHover:!1,hasSideBorder:!1,options:{headers:t.$frontmatter.turtleOptions.headers,data:n.turtles}},{profile:l(({row:s})=>[e("img",{class:"profile-pic",src:t.getTurtlePic(s.name),width:"75"},null,8,E)]),_:2},1032,["options"])])):w("",!0),n.currentView==="grid"?(p(),c("div",P,[(p(!0),c(_,null,b(n.turtles,s=>(p(),v(h,{key:s.name},{body:l(()=>[e("div",x,[e("strong",null,i(s.name),1)]),e("div",N,[e("img",{class:"profile-pic",src:t.getTurtlePic(s.name),width:"100"},null,8,$)]),e("div",U,[o(F,{"background-color":s.color,color:"white"},{default:l(()=>[a(i(s.color),1)]),_:2},1032,["background-color"])]),e("div",null,[L,a(i(s.age),1)])]),_:2},1024))),128))])):w("",!0)])]),_:1})])}const R=m(C,[["render",I]]);export{H as __pageData,R as default};
