/* This file contains mixins with styles used in all types of inputs */

/* Text inputs */

@mixin inputDefaults {
  -webkit-appearance: none; // need this to allow box-shadow to apply on mobile
  background-color: var(--kui-color-background, $kui-color-background);
  border: 0;
  border-radius: var(--kui-border-radius-30, $kui-border-radius-30);
  box-shadow: var(--kui-shadow-border, $kui-shadow-border);
  color: var(--kui-color-text, $kui-color-text);
  font-family: var(--kui-font-family-text, $kui-font-family-text);
  font-size: 16px; // needs to be at least 16px to prevent automatic zoom in on focus on mobile
  font-weight: var(--kui-font-weight-regular, $kui-font-weight-regular);
  line-height: var(--kui-line-height-40, $kui-line-height-40);
  outline: none;
  padding: var(--kui-space-40, $kui-space-40) $kInputPaddingX;
  transition: box-shadow $kongponentsTransitionDurTimingFunc;
  width: 100%;

  @media (min-width: $kui-breakpoint-mobile) {
    font-size: var(--kui-font-size-30, $kui-font-size-30);
  }

  &::placeholder {
    color: var(--kui-color-text-neutral, $kui-color-text-neutral);
  }
}

@mixin inputHover {
  box-shadow: var(--kui-shadow-border-primary-weak, $kui-shadow-border-primary-weak);
}

@mixin inputFocus {
  box-shadow: var(--kui-shadow-border-primary, $kui-shadow-border-primary), var(--kui-shadow-focus, $kui-shadow-focus);
}

// shared styles between disabled and readonly states
@mixin inputDisabledReadOnly {
  background-color: var(--kui-color-background-disabled, $kui-color-background-disabled);
  box-shadow: var(--kui-shadow-border-disabled, $kui-shadow-border-disabled);
  color: var(--kui-color-text-disabled, $kui-color-text-disabled);
}

@mixin inputDisabled {
  @include inputDisabledReadOnly;

  cursor: not-allowed;
}

@mixin inputReadOnly {
  @include inputDisabledReadOnly;
}

/* Radio and checkbox inputs */

// Shared styles between radio and checkbox inputs

@mixin radioCheckboxDefaults {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--kui-color-background, $kui-color-background);
  border: 0;
  box-shadow: var(--kui-shadow-border, $kui-shadow-border);
  cursor: pointer;
  height: var(--kui-icon-size-30, $kui-icon-size-30);
  margin: 0;
  margin-right: var(--kui-space-40, $kui-space-40);
  outline: none;
  position: relative;
  transition:
    box-shadow $kongponentsTransitionDurTimingFunc,
    background-color $kongponentsTransitionDurTimingFunc;
  width: var(--kui-icon-size-30, $kui-icon-size-30);
}

@mixin radioCheckboxHover {
  box-shadow: var(--kui-shadow-border-primary-weak, $kui-shadow-border-primary-weak);
}

@mixin radioCheckboxFocus {
  box-shadow: var(--kui-shadow-border-primary-weak, $kui-shadow-border-primary-weak),
    var(--kui-shadow-focus, $kui-shadow-focus);
}

@mixin radioCheckboxActive {
  box-shadow: var(--kui-shadow-border-primary-strongest, $kui-shadow-border-primary-strongest);
}

@mixin radioCheckboxChecked {
  background-color: var(--kui-color-background-primary, $kui-color-background-primary);
  box-shadow: var(--kui-shadow-border-primary, $kui-shadow-border-primary);
}

@mixin radioCheckboxCheckedFocus {
  box-shadow: var(--kui-shadow-focus, $kui-shadow-focus);
}

@mixin radioCheckboxCheckedActive {
  background-color: var(--kui-color-background-primary-strongest, $kui-color-background-primary-strongest);
}

@mixin radioCheckboxCheckedDisabled {
  background-color: var(--kui-color-background-disabled, $kui-color-background-disabled);
}

@mixin radioCheckboxDisabled {
  background-color: var(--kui-color-background-disabled, $kui-color-background-disabled);
  box-shadow: var(--kui-shadow-border-disabled, $kui-shadow-border-disabled);
  cursor: not-allowed;
}

@mixin radioCheckboxError {
  box-shadow: var(--kui-shadow-border-danger, $kui-shadow-border-danger);
}

@mixin radioCheckboxErrorHover {
  box-shadow: var(--kui-shadow-border-danger-strong, $kui-shadow-border-danger-strong);
}

@mixin radioCheckboxErrorFocus {
  box-shadow: var(--kui-shadow-border-danger-strong, $kui-shadow-border-danger-strong),
    var(--kui-shadow-focus, $kui-shadow-focus);
}

@mixin radioCheckboxErrorChecked {
  background-color: var(--kui-color-background-danger, $kui-color-background-danger);
}

@mixin radioCheckboxErrorCheckedFocus {
  @include radioCheckboxCheckedFocus;
}
