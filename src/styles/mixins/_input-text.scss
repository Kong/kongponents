/* Text inputs */

@mixin inputBoxShadow {
  -webkit-appearance: none; // need this to allow box-shadow to apply on mobile
  background-color: var(--kui-color-background, $kui-color-background);
  border: 0;
  border-radius: var(--kui-border-radius-30, $kui-border-radius-30);
  box-shadow: var(--kui-shadow-border, $kui-shadow-border);
  box-sizing: border-box; // Ensure the padding is calculated in the element's width
  outline: none;
  transition: box-shadow $kongponentsTransitionDurTimingFunc;
}

@mixin inputText {
  color: var(--kui-color-text, $kui-color-text);
  font-family: var(--kui-font-family-text, $kui-font-family-text);
  font-size: var(
    --kui-font-size-40,
    $kui-font-size-40
  ); // needs to be at least 16px to prevent automatic zoom in on focus on mobile
  font-weight: var(--kui-font-weight-regular, $kui-font-weight-regular);
  line-height: var(--kui-line-height-40, $kui-line-height-40); // $kTextAreaLineHeight

  @media (min-width: $kui-breakpoint-mobile) {
    font-size: var(--kui-font-size-30, $kui-font-size-30);
  }
}

@mixin inputDefaults {
  @include inputBoxShadow;
  @include inputText;

  -webkit-appearance: none; // need this to allow box-shadow to apply on mobile
  background-color: var(--kui-color-background, $kui-color-background);
  border: 0;
  border-radius: var(--kui-border-radius-30, $kui-border-radius-30);
  box-shadow: var(--kui-shadow-border, $kui-shadow-border);
  box-sizing: border-box; // Ensure the padding is calculated in the element's width
  outline: none;
  // Variables that reference the same value. If this value changes, all of those need to be updated too.
  padding: var(--kui-space-40, $kui-space-40) var(--kui-space-50, $kui-space-50); // $kInputPaddingX, $kTextAreaPaddingY, $kSelectInputPaddingX, $kSelectInputPaddingY, $kMultiselectInputPaddingY, $kMultiselectInputPaddingX, $kFileUploadInputPaddingX, $kFileUploadInputPaddingY, $kDateTimePickerInputPaddingX, $kDateTimePickerInputPaddingY
  text-overflow: ellipsis;
  transition: box-shadow $kongponentsTransitionDurTimingFunc;
  width: 100%;

  &::placeholder {
    @include inputText;

    color: var(--kui-color-text-neutral, $kui-color-text-neutral);
  }
}

@mixin inputHover {
  box-shadow: var(--kui-shadow-border-primary-weak, $kui-shadow-border-primary-weak);
}

@mixin inputFocus {
  box-shadow: var(--kui-shadow-border-primary, $kui-shadow-border-primary), var(--kui-shadow-focus, $kui-shadow-focus);
}

// shared styles between disabled and readonly states
@mixin inputDisabledReadOnly {
  background-color: var(--kui-color-background-disabled, $kui-color-background-disabled);
  box-shadow: var(--kui-shadow-border-disabled, $kui-shadow-border-disabled);
  color: var(--kui-color-text-disabled, $kui-color-text-disabled);
}

@mixin inputDisabled {
  @include inputDisabledReadOnly;

  cursor: not-allowed;
}

@mixin inputReadOnly {
  @include inputDisabledReadOnly;
}

// error state styles

@mixin inputError {
  box-shadow: var(--kui-shadow-border-danger, $kui-shadow-border-danger);
}

@mixin inputErrorHover {
  box-shadow: var(--kui-shadow-border-danger-strong, $kui-shadow-border-danger-strong);
}

@mixin inputErrorFocus {
  box-shadow: var(--kui-shadow-border-danger, $kui-shadow-border-danger), var(--kui-shadow-focus, $kui-shadow-focus);
}
