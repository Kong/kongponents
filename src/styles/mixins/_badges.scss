@use "@kong/design-tokens/tokens/scss/variables" as *;
@use "@/styles/vars" as *;

/* Badges mixins */

@mixin badgeWrapper {
  border-radius: var(--kui-border-radius-20, $kui-border-radius-20);
  display: inline-flex;
  font-family: var(--kui-font-family-text, $kui-font-family-text);
  font-size: var(--kui-font-size-20, $kui-font-size-20);
  font-weight: var(--kui-font-weight-semibold, $kui-font-weight-semibold);
  line-height: var(--kui-line-height-20, $kui-line-height-20);
  padding: var(--kui-space-20, $kui-space-20) var(--kui-space-40, $kui-space-40);
  width: fit-content;
}

@mixin badgeContent {
  align-items: center;
  display: inline-flex;
  gap: var(--kui-space-40, $kui-space-40);
}

// uses info badge appearance colors as default
@mixin badgeAppearance(
  $bgColor: var(--kui-color-background-primary-weakest, $kui-color-background-primary-weakest),
  $textColor: var(--kui-color-text-primary, $kui-color-text-primary),
  $hoverColor: var(--kui-color-text-primary-strong, $kui-color-text-primary-strong)
) {
  background-color: $bgColor;
  color: $textColor;

  :deep([role="button"]):not([disabled]):not(#{$kongponentsKCopyTooltipWrapperSelector}):not(.badge-content) {
    &:hover,
    &:focus {
      color: $hoverColor !important;
    }
  }

  :deep(a) {
    color: $textColor;
    font-weight: var(--kui-font-weight-semibold, $kui-font-weight-semibold);
    text-decoration: none;

    &:hover {
      color: $hoverColor;
    }
  }
}

@mixin decorativeBadgeAppearance {
  @include badgeAppearance(
    var(--kui-color-background-decorative-purple-weakest, $kui-color-background-decorative-purple-weakest),
    var(--kui-color-text-decorative-purple, $kui-color-text-decorative-purple),
    var(--kui-color-text-decorative-purple-strong, $kui-color-text-decorative-purple-strong)
  );
}
